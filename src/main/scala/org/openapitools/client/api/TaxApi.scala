/**
 * API2Cart OpenAPI
 * API2Cart
 *
 * The version of the OpenAPI document: 1.1
 * Contact: contact@api2cart.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
package org.openapitools.client.api

import org.openapitools.client.model.ModelResponseTaxClassInfo
import org.openapitools.client.model.ModelResponseTaxClassList
import org.openapitools.client.core._
import org.openapitools.client.core.CollectionFormats._
import org.openapitools.client.core.ApiKeyLocations._

object TaxApi {

  def apply(baseUrl: String = "https://api.api2cart.local.com/v1.1") = new TaxApi(baseUrl)
}

class TaxApi(baseUrl: String) {

  /**
   * Use this method to get information about a tax class and its rates. It allows you to calculate the tax percentage for a specific customer's address. This information contains relatively static data that rarely changes, so API2Cart may cache certain data to reduce the load on the store and speed up request execution. We also recommend that you cache the response of this method on your side to save requests. If you need to clear the cache for a specific store, use the cart.validate method.
   * 
   * Expected answers:
   *   code 200 : ModelResponseTaxClassInfo (successful operation)
   * 
   * Available security schemes:
   *   StoreKeyAuth (apiKey)
   *   ApiKeyAuth (apiKey)
   * 
   * @param taxClassId Retrieves taxes specified by class id
   * @param storeId Store Id
   * @param langId Language id
   * @param responseFields Set this parameter in order to choose which entity fields you want to retrieve
   * @param params Set this parameter in order to choose which entity fields you want to retrieve
   * @param exclude Set this parameter in order to choose which entity fields you want to ignore. Works only if parameter `params` equal force_all
   */
  def taxClassInfo(taxClassId: String, storeId: Option[String] = None, langId: Option[String] = None, responseFields: Option[String] = None, params: Option[String] = None, exclude: Option[String] = None)(implicit apiKey: ApiKeyValue, apiKey: ApiKeyValue): ApiRequest[ModelResponseTaxClassInfo] =
    ApiRequest[ModelResponseTaxClassInfo](ApiMethods.GET, baseUrl, "/tax.class.info.json", "application/json")
      .withApiKey(apiKey, "x-store-key", HEADER)
      .withApiKey(apiKey, "x-api-key", HEADER)
      .withQueryParam("tax_class_id", taxClassId)
      .withQueryParam("store_id", storeId)
      .withQueryParam("lang_id", langId)
      .withQueryParam("response_fields", responseFields)
      .withQueryParam("params", params)
      .withQueryParam("exclude", exclude)
      .withSuccessResponse[ModelResponseTaxClassInfo](200)
      

  /**
   * Get list of tax classes from your store.
   * 
   * Expected answers:
   *   code 200 : ModelResponseTaxClassList (successful operation)
   * 
   * Available security schemes:
   *   StoreKeyAuth (apiKey)
   *   ApiKeyAuth (apiKey)
   * 
   * @param count This parameter sets the entity amount that has to be retrieved. Max allowed count=250
   * @param pageCursor Used to retrieve entities via cursor-based pagination (it can't be used with any other filtering parameter)
   * @param storeId Store Id
   * @param findValue Entity search that is specified by some value
   * @param findWhere Tax class search that is specified by field
   * @param createdTo Retrieve entities to their creation date
   * @param createdFrom Retrieve entities from their creation date
   * @param modifiedTo Retrieve entities to their modification date
   * @param modifiedFrom Retrieve entities from their modification date
   * @param responseFields Set this parameter in order to choose which entity fields you want to retrieve
   */
  def taxClassList(count: Option[Int] = None, pageCursor: Option[String] = None, storeId: Option[String] = None, findValue: Option[String] = None, findWhere: Option[String] = None, createdTo: Option[String] = None, createdFrom: Option[String] = None, modifiedTo: Option[String] = None, modifiedFrom: Option[String] = None, responseFields: Option[String] = None)(implicit apiKey: ApiKeyValue, apiKey: ApiKeyValue): ApiRequest[ModelResponseTaxClassList] =
    ApiRequest[ModelResponseTaxClassList](ApiMethods.GET, baseUrl, "/tax.class.list.json", "application/json")
      .withApiKey(apiKey, "x-store-key", HEADER)
      .withApiKey(apiKey, "x-api-key", HEADER)
      .withQueryParam("count", count)
      .withQueryParam("page_cursor", pageCursor)
      .withQueryParam("store_id", storeId)
      .withQueryParam("find_value", findValue)
      .withQueryParam("find_where", findWhere)
      .withQueryParam("created_to", createdTo)
      .withQueryParam("created_from", createdFrom)
      .withQueryParam("modified_to", modifiedTo)
      .withQueryParam("modified_from", modifiedFrom)
      .withQueryParam("response_fields", responseFields)
      .withSuccessResponse[ModelResponseTaxClassList](200)
      



}

