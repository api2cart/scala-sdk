/**
 * API2Cart OpenAPI
 * API2Cart
 *
 * The version of the OpenAPI document: 1.1
 * Contact: contact@api2cart.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
package org.openapitools.client.api

import org.openapitools.client.model.ModelResponseBatchJobList
import org.openapitools.client.model.ResponseBatchJobResult
import org.openapitools.client.core._
import org.openapitools.client.core.CollectionFormats._
import org.openapitools.client.core.ApiKeyLocations._

object BatchApi {

  def apply(baseUrl: String = "https://api.api2cart.local.com/v1.1") = new BatchApi(baseUrl)
}

class BatchApi(baseUrl: String) {

  /**
   * Get list of recent jobs
   * 
   * Expected answers:
   *   code 200 : ModelResponseBatchJobList (successful operation)
   * 
   * Available security schemes:
   *   StoreKeyAuth (apiKey)
   *   ApiKeyAuth (apiKey)
   * 
   * @param count This parameter sets the entity amount that has to be retrieved. Max allowed count=250
   * @param pageCursor Used to retrieve entities via cursor-based pagination (it can't be used with any other filtering parameter)
   * @param ids Filter batch jobs by ids
   * @param createdFrom Retrieve entities from their creation date
   * @param createdTo Retrieve entities to their creation date
   * @param processedFrom Retrieve entities according to their processing datetime
   * @param processedTo Retrieve entities according to their processing datetime
   * @param responseFields Set this parameter in order to choose which entity fields you want to retrieve
   */
  def batchJobList(count: Option[Int] = None, pageCursor: Option[String] = None, ids: Option[String] = None, createdFrom: Option[String] = None, createdTo: Option[String] = None, processedFrom: Option[String] = None, processedTo: Option[String] = None, responseFields: Option[String] = None)(implicit apiKey: ApiKeyValue, apiKey: ApiKeyValue): ApiRequest[ModelResponseBatchJobList] =
    ApiRequest[ModelResponseBatchJobList](ApiMethods.GET, baseUrl, "/batch.job.list.json", "application/json")
      .withApiKey(apiKey, "x-store-key", HEADER)
      .withApiKey(apiKey, "x-api-key", HEADER)
      .withQueryParam("count", count)
      .withQueryParam("page_cursor", pageCursor)
      .withQueryParam("ids", ids)
      .withQueryParam("created_from", createdFrom)
      .withQueryParam("created_to", createdTo)
      .withQueryParam("processed_from", processedFrom)
      .withQueryParam("processed_to", processedTo)
      .withQueryParam("response_fields", responseFields)
      .withSuccessResponse[ModelResponseBatchJobList](200)
      

  /**
   * Get job result data
   * 
   * Expected answers:
   *   code 200 : ResponseBatchJobResult (successful operation)
   * 
   * Available security schemes:
   *   StoreKeyAuth (apiKey)
   *   ApiKeyAuth (apiKey)
   * 
   * @param id Entity id
   */
  def batchJobResult(id: String)(implicit apiKey: ApiKeyValue, apiKey: ApiKeyValue): ApiRequest[ResponseBatchJobResult] =
    ApiRequest[ResponseBatchJobResult](ApiMethods.GET, baseUrl, "/batch.job.result.json", "application/json")
      .withApiKey(apiKey, "x-store-key", HEADER)
      .withApiKey(apiKey, "x-api-key", HEADER)
      .withQueryParam("id", id)
      .withSuccessResponse[ResponseBatchJobResult](200)
      



}

